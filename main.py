#imports

from http import server
import random
from select import select
from turtle import color
from unicodedata import decimal
import disnake
from disnake.ext import commands
from disnake.enums import ButtonStyle

import uuid

import datetime
import asyncio
import sys
import time

import random

import sqlite3
from requests import delete
from translate import Translator
from bot_settings import bot_settings

bot = commands.Bot(command_prefix=bot_settings['PREFIX'], intents = disnake.Intents.all(), activity = disnake.Game('developming', status = disnake.Status.online))
bot.remove_command('help')

############################################################################################################################

#####################################
# –°–ü–ò–°–û–ö ID –†–û–õ–ï–ô, –ì–ò–õ–î, –ë–û–¢ –ù–ï–ô–ú
#####################################
dev_perms = [1004312064904413184]
high_perms = [1004312064904413184, 1004314191953408062]
admin_perms = [1004312064904413184, 1004314191953408062, 1000009913155719258]
supportrole = [1002486676913922058]
mod_perms = [1004312064904413184, 1004314191953408062, 1000009913155719258, 1000011043197702185]
coder = [1004312064904413184]
db_access = [1004361054341574697]


bot_name = 'Sora üëº'
guild = [1000009791961309194]

ts = time.time()
st = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S')

#####################################
# BIND –û–¢–í–ï–¢–´
#####################################

bot_slash_commands = (
    f'–í—Å–µ slash –∫–æ–º–∞–Ω–¥—ã (–≤—ã–∑—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ /)\n\
    **/help** - –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –ø–æ–º–æ—â–∏.\n\
    **/myinfo** - –≤—ã–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—Å.\n\
    **/translator** (—Ç–µ–∫—Å—Ç) - –ø–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π.\n\
    **/embrace** (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - –æ–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.n\n\
    **/kiss** (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\
    **/slap** (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - —à–ª–µ–ø–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\
    **/beat** (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - —É–¥–∞—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èn\n\
    **/myinfo** - –≤—ã–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.\n\
    **/avatar** (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º –∞–≤–∞—Ç–∞—Ä–∫—É —É–ø–æ–º—è–Ω—É—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n\
    **/math** (–ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ) (–æ–ø–µ—Ä–∞—Ç–æ—Ä) (–≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ) - –ø—Ä–æ—Å—Ç–æ–π –±–∞–Ω–∞–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è —Å –¥–≤—É–º—è —á–∏—Å–ª–∞–º–∏.\n\n')


bot_message_commands = (
    f"–í—Å–µ message –∫–æ–º–∞–Ω–¥—ã (–≤—ã–∑—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–µ—Ñ–∏–∫—Å)\n\
    **ping** - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å.\n\n")

#####################################
# –î–õ–Ø –≠–ú–ë–ï–î–ê
#####################################

serverthumbnail = 'https://leganerd.com/wp-content/uploads/2021/01/discord-999x604.jpg'
botversion = '–í–∞—à –ª—é–±–∏–º—ã–π –±–æ—Ç - Sora üëº –≤–µ—Ä—Å–∏–∏ 1.0 üíó'
serverauthor = 'server name'


############################################################################################################################

@bot.event
async def on_ready():
    ts = time.time()
    st = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S')

    print(f'Moderation bot is connected by: {st}')
    print('---------')

    with sqlite3.connect('glory.db') as db:
        c = db.cursor()
        c.execute("""CREATE TABLE IF NOT EXISTS members (
            name text,
            id INTEGER,
            on_join TEXT,
            messages INTEGER,
            last_update INTEGER,
            mutetime INTEGER,
            temprole TEXT,
            tempRoleTime INTEGER
    )""")
        db.commit()
        c.execute("""CREATE TABLE IF NOT EXISTS families (
            family_name text,
            family_id INTEGER PRIMARY KEY,
            family_leader text,
            family_counter INTEGER
    )""")
        db.commit()
    db.close()


# ###############################################################################################################################################

# @bot.command()
# async def rainbow(inter):
#     rainbowcolors = [disnake.Color.green(), disnake.Color.red(), disnake.Color.orange(), disnake.Color.brand_red()]
#     for role in inter.author.roles:
#         if role.id in dev_perms:
#             rainbowid = 1000024220086046741
#             await role.edit(color=random.choise(rainbowcolors))
#             await asyncio.sleep(1)

# @bot.command()
# async def no_rainbow(inter):
#     for role in inter.author.roles:
#         if role.id in dev_perms:
#             await inter.remove_roles(rainbow)
#             break

# ###############################################################################################################################################


@bot.command()
async def presence_help(inter):
    for role in inter.author.roles:
        if role.id in admin_perms:
            await inter.send(f'{inter.author.mention}, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∑–≤–∞–ª–∏ –ø–æ–º–æ—â—å –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º:\n\
`listen` - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å "—Å–ª—É—à–∞–µ—Ç".\n\
`game` - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å "–∏–≥—Ä–∞–µ—Ç".\n\
`watch` - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å "—Å–º–æ—Ç—Ä–∏—Ç".\n\
`competing` - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å "—Å–æ—Ä–µ–≤–Ω—É–µ—Ç—Å—è –≤".')
            break

@bot.slash_command(description='listen (—Å–ª—É—à–∞–µ—Ç), watch (—Å–º–æ—Ç—Ä–∏—Ç), game (–∏–≥—Ä–∞–µ—Ç –≤), competing (—Å–æ—Ä–µ–≤–Ω—É–µ—Ç—Å—è –≤)')
async def change_presence(inter, presence, doing):
    for role in inter.author.roles:
        if role.id in admin_perms:
            values = ['listen', 'watch', 'game', 'competing']
            adminname = inter.author.nick if (inter.author.nick) else inter.author.name
            if presence == "listen":
                presencelog = bot.get_channel(1000047444362543164)
                await presencelog.send(f'{inter.author.mention} —Å–º–µ–Ω–∏–ª –º–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ `{presence}` —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º `{doing}`')
                activity = disnake.Activity(type=disnake.ActivityType.listening, name = doing)
                await bot.change_presence(activity=activity)
                listenembed = disnake.Embed (
                    title=f'–í–æ—Ç —ç—Ç–æ –∑–≤—É–∫! –Ø –Ω–∞–¥–µ–ª –Ω–∞—É—à–Ω–∏–∫–∏ –∏...',
                    description=f'... —Ç–µ–ø–µ—Ä—å —è —Å–ª—É—à–∞—é `{doing}`, –Ω—É —Å–ø–∞—Å–∏–±–æ, {inter.author.mention}...',
                    colour=disnake.Color.from_rgb(240, 128, 128)
                )
                listenembed.set_thumbnail(url=serverthumbnail)
                listenembed.set_image(url='https://i.pinimg.com/originals/3d/2e/3e/3d2e3e5a266f05becb4fb522a962f105.jpg')
                await inter.send(embed=listenembed)
                return
            elif presence == "watch":
                presencelog = bot.get_channel(1000047444362543164)
                await presencelog.send(f'{inter.author.mention} —Å–º–µ–Ω–∏–ª –º–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ `{presence}` —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º `{doing}`')
                activity = disnake.Activity(type=disnake.ActivityType.watching, name = doing)
                await bot.change_presence(activity=activity)
                watchembed = disnake.Embed (
                    title=f'3D –æ—á–∫–∏ —É–∂–µ –Ω–∞ –º–Ω–µ!',
                    description=f'–í –∫—Ä—É—Ç—ã—Ö –æ—á–∫–∞—Ö —è —Ç–µ–ø–µ—Ä—å —Å–º–æ—Ç—Ä—é `{doing}`, —Å–ø–∞—Å–∏–±–æ {inter.author.mention} –∑–∞ –∫—Ä—É—Ç–æ–π –≤–∏–¥–µ–æ–º–∞—Ç–µ—Ä–∏–∞–ª!',
                    colour=disnake.Color.from_rgb(255, 20, 147)
                )
                watchembed.set_thumbnail(url=serverthumbnail)
                watchembed.set_image(url='https://avatars.mds.yandex.net/get-zen_doc/4055632/pub_601e576d86f4e22208ad7bd7_601e5cd553bb652e6a060e71/scale_1200')
                await inter.send(embed=watchembed)
                return
            elif presence == "game":
                presencelog = bot.get_channel(1000047444362543164)
                await presencelog.send(f'{inter.author.mention} —Å–º–µ–Ω–∏–ª –º–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ `{presence}` —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º `{doing}`')
                activity = disnake.Activity(type=disnake.ActivityType.playing, name = doing)
                await bot.change_presence(activity=activity)
                gameembed = disnake.Embed (
                    title=f'–ì–µ–π–º–ø–∞–¥ –≤ —Ä—É–∫–∏... –∏... –ü–û–ì–ù–ê–õ–ò!',
                    description=f'–Ø –∑–∞–ø—É—Å—Ç–∏–ª –∏–≥—Ä—É –∏ —Ç–µ–ø–µ—Ä—å —è –∏–≥—Ä–∞—é –≤ `{doing}`! –ö—Å—Ç–∞—Ç–∏, {inter.author.mention}, –≥–µ–π–º–ø–∞–¥ –∫—Ä—É—Ç–æ–π!',
                    colour=disnake.Color.from_rgb(255, 20, 147)
                )
                gameembed.set_thumbnail(url=serverthumbnail)
                gameembed.set_image(url='https://avatars.mds.yandex.net/i?id=f43acd35e117442361f400890bed2e1b-5257701-images-thumbs&n=13')
                await inter.send(embed=gameembed)
                return
            elif presence == "competing":
                presencelog = bot.get_channel(1000047444362543164)
                await presencelog.send(f'{inter.author.mention} —Å–º–µ–Ω–∏–ª –º–æ—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ `{presence}` —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º `{doing}`')
                activity = disnake.Activity(type=disnake.ActivityType.competing, name = doing)
                await bot.change_presence(activity=activity)
                competingembed = disnake.Embed (
                    title=f'–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Ñ–æ—Ä–º–∞, –ø–µ—Ä—á–∞—Ç–∫–∏ –∏ –Ω–∞ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ!',
                    description=f'{inter.author.mention} –æ—Ç–ø—Ä–∞–≤–∏–ª –º–µ–Ω—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—Å—è –≤ `{doing}`. –î–∞–∂–µ –Ω–µ —Å–æ–º–Ω–µ–≤–∞–π—Ç–µ—Å—å, —è –≤—ã–π–≥—Ä–∞—é!',
                    colour=disnake.Color.from_rgb(255, 20, 147)
                )
                competingembed.set_thumbnail(url=serverthumbnail)
                competingembed.set_image(url='http://4.bp.blogspot.com/-LSboRP4Jj5g/VpevRn5SCqI/AAAAAAAAA3Y/YKV3ULPzqLI/s1600/Baka+to+Test+to+Shoukanjuu+Ni!+full+episode+gatefull.me.png')
                await inter.send(embed=competingembed)
                return
            elif presence not in values:
                await inter.send(f'{inter.author.mention}, –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.')
                return
    else:
        await inter.send(f'{inter.author.mention}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.')
        return


@bot.event
async def on_member_join(user):
    channel = bot.get_channel(1004301433031630858)
    joinembed = disnake.Embed (
        title = f"–£ –Ω–∞—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ! –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º {user.name}",
        description = f"–ü—Ä–∏–≤–µ—Ç, {user.name}. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä '...', –∑–¥–µ—Å—å —Ç–µ–±—è –∂–¥–µ—Ç:\n\
            1. –£—é—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.\n\
            2. –ê–∫—Ç–∏–≤–Ω–∞—è, –∞–¥–µ–∫–≤–∞—Ç–Ω–∞—è –∏ —á–µ—Å—Ç–Ω–∞—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è!\n\
            3. –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è, **—Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç** –∏ –ø—Ä–∏—è—Ç–Ω–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏!",
        color = disnake.Colour.from_rgb(255, 0, 255)
    )
    joinembed.set_thumbnail(url=serverthumbnail)
    joinembed.set_footer(text=botversion)
    await channel.send(embed=joinembed)
    with sqlite3.connect('glory.db') as db:
        c = db.cursor()
        joincheck = c.execute(f"SELECT id FROM members WHERE id = '{user.id}'").fetchone()
        db.commit()
        if joincheck:
            c.execute(f"UPDATE members SET name = '{user.name}', id = '{user.id}', on_join = on_join, messages = messages, last_update = '{st}', mutetime = mutetime, temprole = 'None', tempRoleTime = '0', is_family_leader = is_family_leader, family_moderator = family_moderator WHERE id = '{user.id}'")
            db.commit()
        elif c.execute(f"SELECT id FROM members WHERE id = '{user.id}'").fetchone() is None:
            c.execute(f"INSERT INTO members VALUES ('{user.name}', '{user.id}', '{user.joined_at}', '0', '{st}', '0', 'No Role', '0', '0', '0', '0')")
            db.commit()
    db.close()
    return

@bot.slash_command()
async def members_db_select(inter, user: disnake.User):
    for role in inter.author.roles:
        if role.id in high_perms:
            with sqlite3.connect('glory.db') as db:
                c = db.cursor()
                check = c.execute(f"SELECT id FROM members WHERE id = '{user.id}'").fetchone()
                db.commit()
            if check is None:
                await inter.send(f'error: missing {user.mention} in database. use /member_db_update (user)')
                return
            else:
                nickname = c.execute(f"SELECT name FROM members WHERE id = '{user.id}'").fetchone()
                id = user.id
                on_join = user.joined_at
                messages = c.execute(f"SELECT messages FROM members WHERE id = '{user.id}'").fetchone()
                last_update = c.execute(f"SELECT last_update FROM members WHERE id = '{user.id}'").fetchone()
                mutetime = c.execute(f"SELECT last_update FROM members WHERE id = '{user.id}'").fetchone()
                temprole = c.execute(f"SELECT temprole FROM members WHERE id = '{user.id}'").fetchone()
                tempRoleTime = c.execute(f"SELECT tempRoleTime FROM members WHERE id = '{user.id}'").fetchone()
                db.commit()
            db.close()
            selectembed = disnake.Embed (
                title='...-*- path/:/coding:database?update -*-...',
                description=f'taked from database: `members`:\n\n\n\
                name: `{nickname}`\n\
                id: `{id}`\n\
                member_joined_at: `{on_join}`\n\
                messages_counter: `{messages}`\n\
                last_update = `{last_update}`\n\
                mutetime = `{mutetime}`\n\
                temprole = `{temprole}`\n\
                tempRoleTime = `{tempRoleTime}`\n\n\n\
                getting by `{st}`',
                color=disnake.Color.from_rgb(34, 98, 0)
            )
            selectembed.set_thumbnail(url=serverthumbnail)
            selectembed.set_image(url='https://phonoteka.org/uploads/posts/2021-05/1622258823_6-phonoteka_org-p-baza-dannikh-art-krasivo-6.jpg')
            await inter.send(f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {inter.author.mention} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ {user.mention} –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö', embed=selectembed)
            break

@bot.slash_command()
async def members_db_update(inter, user: disnake.User):
    for role in inter.author.roles:
        if role.id in high_perms:
            ts = time.time()
            st = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S')
            channel = bot.get_channel(1000009793349619805)
            db = sqlite3.connect('glory.db')
            c = db.cursor()
            havecheck = c.execute(f"SELECT * FROM members WHERE id = '{user.id}'")
            check = havecheck.fetchone()
            if check is None:
                c.execute(f"INSERT INTO members VALUES('{user.name}', '{user.id}', '{user.joined_at}', '0', '{st}', '0', 'No Role', '0')")
                db.commit()
                db.close()
                db_insertembed = disnake.Embed (
                    title=f'...-*- path/:/coding:database?insert -*-...',
                    description=f'{user.mention} –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –≤–∏–¥–∏–º–æ —è –µ–≥–æ –ø—Ä–æ–ø—É—Å—Ç–∏–ª :(\n–ù–æ –Ω–∏—á–µ–≥–æ, —è —Ç–æ–ª—å–∫–æ —á—Ç–æ –µ–≥–æ –∑–∞–Ω–µ—Å —Ç—É–¥–∞!',
                    color=disnake.Colour.from_rgb(34, 98, 0)
                )
                db_insertembed.set_image(url="https://i.ytimg.com/vi/31HfP81oWDI/maxresdefault.jpg?7857057827")
                db_insertembed.set_thumbnail(url=serverthumbnail)
                await inter.send(embed=db_insertembed)
                break
            else:
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    c.execute(f"UPDATE members SET name = '{user.name}', id = '{user.id}', on_join = '{user.joined_at}', messages = messages, last_update = '{st}', mutetime = mutetime, temprole = temprole, tempRoleTime = tempRoleTime WHERE id = '{user.id}'")
                    db.commit()
                db.close()
                insertembed = disnake.Embed (
                    title='...-*-  path/:/coding:database?update -*-...',
                    description=f'{user.mention} –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –≤ `–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö` –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {inter.author.mention}',
                    color=disnake.Colour.from_rgb(34, 98, 0)
                )
                insertembed.set_thumbnail(url=serverthumbnail)
                insertembed.set_image(url='https://i.ytimg.com/vi/31HfP81oWDI/maxresdefault.jpg?7857057827')
                await inter.send(embed=insertembed)
                break
    else:
        await inter.send(f'–£–≤–∞–∂–∞–µ–º—ã–π {inter.author.mention}, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')

# @bot.event
# async def on_member_update(before, after):
#     with sqlite3.connect('glory.db') as db:
#         c = db.cursor()
#         c.execute(f"UPDATE members SET name = '{after.name}' WHERE id = '{before.id}'")
#         db.commit()
#     db.close()

# @bot.command()
# async def role_users(inter, checkrole: disnake.Role):
#     for role in inter.author.roles:
#         if role.id in mod_perms:
#             msg = checkrole.members
#             for name in msg:
#                 endname = name
#                 role_users_embed = disnake.Embed(
#                     title=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ä–æ–ª—å—é {role.name}',
#                     description=f'{endname}'
#                 )
#                 await inter.send(embed=role_users_embed)
#                 await inter.send(endname)
#                 break



# @bot.event
# async def on_command_error(inter, error):
#     if isinstance(error, commands.CommandOnCooldown):
#         await inter.send(f'{inter.author.mention}, –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞–ª–æ–∂–µ–Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ {round(error.retry_after, 2)} —Å–µ–∫—É–Ω–¥.')


@bot.slash_command(description='+ (—Å–ª–æ–∂–∏—Ç—å), - (–≤—ã—á–µ—Å—Ç—å), / (–ø–æ–¥–µ–ª–∏—Ç—å), * (—É–º–Ω–æ–∂–∏—Ç—å) ** (–≤–æ–∑–≤–µ—Å—Ç–∏ –≤ —Å—Ç–µ–ø–µ–Ω—å), % (–æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è)')
async def math(inter, firstnum: float, operator, secondnum: float):
    a = firstnum
    b = secondnum
    operations = ['+', '-', '/', '**', '%', '*']
    if operator not in operations:
        return await inter.send(f'{inter.author.mention}, –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã ')
    elif operator == '+':
        c = a + b
        await inter.send(f'–°—É–º–º–∞ `{a}` –∏ `{b}` —Ä–∞–≤–Ω–∞ `{c}`.')
        return
    elif operator == '-':
        c = a - b
        await inter.send(f'–†–∞–∑–Ω–æ—Å—Ç—å `{a}` –æ—Ç `{b}` —Ä–∞–≤–Ω–∞ `{c}`.')
        return
    elif operator == '/':
        c = a / b
        await inter.send(f'–ß–∞—Å—Ç–Ω–æ–µ `{a}` –∏ `{b}` —Ä–∞–≤–Ω–æ `{c}`.')
        return
    elif operator == '**':
        c = a ** b
        await inter.send(f'–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è `{a}` –≤ —Å—Ç–µ–ø–µ–Ω—å `{b}` —Ä–∞–≤–µ–Ω `{c}`.')
        return
    elif operator == '%':
        c = a % b
        await inter.send(f'–û—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è `{a}` –Ω–∞ `{b}` —Ä–∞–≤–µ–Ω `{c}`.')
        return
    elif operator == '*':
        c = a * b
        await inter.send(f'–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ `{a}` –∏ {b} —Ä–∞–≤–Ω–æ `{c}`')
        return
        

@bot.slash_command()
async def db_members(inter):
    for role in inter.author.roles:
        if role.id in db_access:
            with sqlite3.connect('glory.db') as db:
                c = db.cursor()
                names = c.execute("SELECT name FROM members").fetchall()
                ids = c.execute("SELECT id FROM members").fetchall()
                on_join = c.execute("SELECT on_join FROM members").fetchall()
                messages = c.execute("SELECT messages FROM members").fetchall()
                last_update = c.execute("SELECT last_update FROM members").fetchall()

                mutetime = c.execute("SELECT mutetime FROM members").fetchall()
                temprole = c.execute("SELECT temprole FROM members").fetchall()
                tempRoleTime = c.execute("SELECT tempRoleTime FROM members").fetchall()
                db_membersembed = disnake.Embed (
                    title='',
                    description=f'`Names:` {names}\n\n\
                    `ids:` {ids}\n\n\
                    `on_join:` {on_join}\n\n\
                    `messages:` {messages}\n\n\
                    `last_update:` {last_update}\n\n\
                    `mutetime:` {mutetime}\n\n\
                    `temprole:` {temprole}\n\n\
                    `tempRoleTime:` {tempRoleTime}\n\n'
                )
                await inter.send(f'–ó–∞–ø—Ä–æ—Å –ë–î –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ {inter.author.mention}', embed=db_membersembed)
                break


@bot.slash_command()
async def tempmute(inter, user: disnake.Member, mutetime: int, reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'):
    for role in inter.author.roles:
        if role.id in mod_perms:
            muterole = user.guild.get_role(1000828532324319352)
            for muted in user.roles:
                if muterole in user.roles:
                    await inter.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} —É–∂–µ –∏–º–µ–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —á–∞—Ç–∞.')
                    return
                elif user.top_role >= inter.author.top_role:
                    await inter.send(f'{inter.author.mention} –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ä–æ–ª–∏ –≤—ã—à–µ –≤–∞—à–µ–π.')
                    return
                elif role.id in mod_perms:
                    await user.add_roles(muterole)
                    await inter.send(f'{user.mention} –ø–æ–ª—É—á–∏–ª –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —á–∞—Ç–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ `{reason}` –Ω–∞ `{mutetime}` –º–∏–Ω—É—Ç.')
                    with sqlite3.connect('glory.db') as db:
                        c = db.cursor()
                        insert = c.execute(f"UPDATE members SET mutetime = {mutetime} WHERE id = '{user.id}'")
                        db.commit()
                        mutetimeFromDb = c.execute(f"SELECT mutetime FROM members WHERE id = '{user.id}'")
                        fetch = mutetimeFromDb.fetchone()
                        db.commit()
                        strfetch = fetch[0]
                        mutetimeforunmute = strfetch
                    db.close()
                    while mutetimeforunmute != 0:
                        mutetimeforunmute -= 1
                        await asyncio.sleep(60)
                    if mutetimeforunmute == 0:
                        await user.remove_roles(muterole)
                        await inter.send(f'{user.mention}, –≤–∞—à–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–∞—Ç–∞ –±—ã–ª–∞ —Å–Ω—è—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –û–±—â–∞–π—Ç–µ—Å—å –≤–Ω–æ–≤—å!')
                        with sqlite3.connect('glory.db') as db:
                            c = db.cursor()
                            c.execute(f"UPDATE members SET mutetime = 0 WHERE id = '{user.id}'")
                            db.commit()
                        db.close()
                    return

@bot.slash_command()
async def unmute(inter, user: disnake.Member, reason = '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'):
    for role in inter.author.roles:
        if role.id in mod_perms:
            muterole = user.guild.get_role(1000828532324319352)
            if reason == '–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞':
                logchannel = bot.get_channel(1000047355179057323)
                await user.remove_roles(muterole)
                await inter.send(f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {inter.author.mention} —Å–Ω—è–ª –±–∞–Ω —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention} –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã!')
                await logchannel.send(f'{inter.author.mention} —Ä–∞–∑–º—É—Ç–∏–ª –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã {user.mention} –≤ –∫–∞–Ω–∞–ª–µ {inter.channel.mention} –≤ `{st}`. ')
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    c.execute(f"UPDATE members SET mutetime = '0' WHERE id = '{user.id}'")
                    db.commit()
                db.close()
                break
            elif reason:
                logchannel = bot.get_channel(1000047355179057323)
                await user.remove_roles(muterole)
                await inter.send(f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {inter.author.mention} —Å–Ω—è–ª –±–∞–Ω —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention} –ø–æ –ø—Ä–∏—á–∏–Ω–µ: `{reason} –≤ {st}. `')
                await logchannel.send(f'{inter.author.mention} —Ä–∞–∑–º—É—Ç–∏–ª {user.mention} –≤ –∫–∞–Ω–∞–ª–µ {inter.channel.mention} –ø–æ –ø—Ä–∏—á–∏–Ω–µ `{reason}`.')
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    c.execute(f"UPDATE members SET mutetime = '0' WHERE id = '{user.id}'")
                    db.commit()
                db.close()
                break
            else:
                await inter.send(f'{inter.author.mention}, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.')
                



@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    elif message.content == 'reset':
        return
    else:
        await bot.process_commands(message)
        if len(message.content) >= 4:
            with sqlite3.connect('glory.db') as db:
                c = db.cursor()
                add = c.execute(f"UPDATE members SET messages = messages + 1 WHERE id = '{message.author.id}'")
                db.commit()
            db.close()
            return

@bot.slash_command(description='–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞')
async def reset_messages(inter, user: disnake.Member):
    for role in inter.author.roles:
        if role.id in db_access:
            await inter.send(f'{inter.author.mention}, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—á–∏—Å—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞ {user.mention} –Ω–∞–ø–∏—Å–∞–≤ `+`.')
            response = await bot.wait_for('message')
            if response.content.lower() not in '+':
                await inter.send('–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –æ–±–Ω—É–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞.', delete_after=5)
                return
            else:
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    messages = c.execute(f"""SELECT messages FROM members WHERE id = '{user.id}'""").fetchone()
                    messages_a = messages[0]
                    c.execute(f"""UPDATE members SET messages = 0 WHERE id = '{user.id}'""")
                    db.commit()
                db.close()
                await inter.send(f'{inter.author.mention} –æ–±–Ω—É–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞. –î–æ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–ª `{messages_a}` —Å–æ–æ–±—â–µ–Ω–∏–π(-—è).')

@bot.command()
@commands.cooldown(1, 30, commands.BucketType.user)
async def reset_all_messages(inter):
    for role in inter.author.roles:
        if role.id in high_perms:
            try:
                await inter.send(f'{inter.author.mention}, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–∞–ø–∏—Å–∞–≤: `reset`. (–Ω–∞ –æ—Ç–≤–µ—Ç 10 —Å–µ–∫—É–Ω–¥)')
                response = await bot.wait_for('message', timeout=10)
            except asyncio.TimeoutError:
                await inter.send(f'{inter.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (10 —Å–µ–∫—É–Ω–¥) –≤—ã—à–ª–æ.')
                return
            if response.content.lower() not in ('reset'):
                await inter.send(f'{inter.author.mention} –≤—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏–π.')
                return
            else:
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    c.execute("UPDATE members SET messages = 0")
                    db.commit()
                    await inter.send(f'{inter.author.mention} –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—Å–∏–ª–∏ —Å—á–µ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–µ—Ä–≤–µ—Ä–∞.')
                db.close()
                return

@bot.event
async def on_member_remove(user):
    ts = time.time()
    st = datetime.datetime.fromtimestamp(ts).strftime('%Y-%m-%d %H:%M:%S')
    channel = bot.get_channel(1004301485607223317)
    with sqlite3.connect('glory.db') as db:
        c = db.cursor()
        getdbmessage = c.execute(f"SELECT messages FROM members WHERE id = '{user.id}'").fetchone()
        db.commit()
        getlastupdate = c.execute(f"SELECT last_update FROM members WHERE id = '{user.id}'").fetchone()
        db.commit()
    db.close()
    removeembed = disnake.Embed (
        title=f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ—Ç –Ω–∞—Å —É—à–µ–ª –æ–¥–∏–Ω —É—á–∞—Å—Ç–Ω–∏–∫, –∏ —ç—Ç–æ –±—ã–ª - **{user.name}** =(',
        description=f'–û–Ω(-–∞) –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è(-–∞—Å—å) –∫ –Ω–∞–º `{user.joined_at}`\n\
–ò–º–µ–ª(-–∞) `{getdbmessage}` —Å–æ–æ–±—â–µ–Ω–∏–π.\n\
–ï–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –±—ã–ª–æ `{getlastupdate}`\n\n\
–ü–æ–∂–µ–ª–∞–µ–º –µ–º—É(-–µ–π) —É–¥–∞—á–∏ –∏ –∂–¥–µ–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è —Å–Ω–æ–≤–∞!',
        color=disnake.Colour.from_rgb(219, 112, 147)
    )
    removeembed.set_thumbnail(url=serverthumbnail)
    removeembed.set_image(url='https://i.gifer.com/L9vO.gif')
    await channel.send(embed=removeembed)





@bot.slash_command()
async def members_db_remove(inter, user: disnake.User, reason):
    for role in inter.author.roles:
        if role.id in db_access:
            with sqlite3.connect('glory.db') as db:
                c = db.cursor()
                c.execute(f"DELETE FROM members WHERE id = '{user.id}'")
                db.commit()
            db.close()
            removeembed = disnake.Embed (
                title='...-*-path/:/coding:database?remove-*-...',
                description=f'{inter.author.mention} —É–¥–∞–ª–∏–ª –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö {user.mention} –ø–æ –ø—Ä–∏—á–∏–Ω–µ: `{reason}`.',
                color=disnake.Colour.from_rgb(34, 98, 0)
            )
            removeembed.set_thumbnail(url=serverthumbnail)
            removeembed.set_image(url='https://i.ytimg.com/vi/31HfP81oWDI/maxresdefault.jpg?7857057827')
            await inter.send(embed=removeembed)
            break
    else:
        await inter.send(f'{inter.author.mention}, —É –≤–∞—Å –ù–ï–¢ –ø—Ä–∞–≤ –Ω–∞ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.')


@bot.slash_command()
async def getinfo(inter, user: disnake.Member):
    servernick = user.nick if (user.nick) else user.name
    for role in inter.author.roles:
        if role.id in mod_perms:
            with sqlite3.connect('glory.db') as db:
                c = db.cursor()
                getmessages = c.execute(f"SELECT messages FROM members WHERE id = '{inter.author.id}'").fetchone()
                db.commit()
            db.close()
            my_infoembed = disnake.Embed (
            title = f'{inter.author.name}, **–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {servernick} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!',
            description = f'1. –ï–≥–æ –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: **{servernick}**\n\
            2. –ï–≥–æ –Ω–∏–∫–Ω–µ–π–º –≤ Discord: **{user.name}**\n\
            3. –ï–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID: **{user.id}**\n\
            4. –ï–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: **{getmessages}**\n\
            4. –û–Ω –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä: **{user.joined_at}**\n\
            5. –ï–≥–æ –Ω–∞–∏–≤—ã—Å—à–∞—è —Ä–æ–ª—å: **{user.top_role}**\n\
            6. –ï–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–π—á–∞—Å: **{user.status}**\n\
            7. –ï–≥–æ —Å—Ç–∞—Ç—É—Å —Å–µ–π—á–∞—Å:   **{user.activity}**',
            color=disnake.Colour.from_rgb(238, 130, 238)
    )
    my_infoembed.set_thumbnail(url=user.avatar.url)
    my_infoembed.set_image(url='https://i.artfile.ru/2211x1236_967840_[www.ArtFile.ru].jpg')
    await inter.send(embed=my_infoembed)
            

@bot.slash_command()
async def myinfo(inter):
    servernick = inter.author.nick if (inter.author.nick) else inter.author.name
    with sqlite3.connect('glory.db') as db:
        c = db.cursor()
        getmessages = c.execute(f"SELECT messages FROM members WHERE id = '{inter.author.id}'").fetchone()
        db.commit()
    db.close()
    my_infoembed = disnake.Embed (
        title = f'{inter.author.name}, –≤–∞—à–∞ **–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!',
        description = f'1. –í–∞—à –Ω–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: **{servernick}**\n\
            2. –í–∞—à –Ω–∏–∫–Ω–µ–π–º –≤ Discord: **{inter.author.name}**\n\
            3. –í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID: **{inter.author.id}**\n\
            4. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: **{getmessages}**\n\
            5. –í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä: **{inter.author.joined_at}**\n\
            6. –í–∞—à–∞ –Ω–∞–∏–≤—ã—Å—à–∞—è —Ä–æ–ª—å: **{inter.author.top_role}**\n\
            7. –í–∞—à–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–π—á–∞—Å: **{inter.author.status}**\n\
            8. –í–∞—à —Å—Ç–∞—Ç—É—Å —Å–µ–π—á–∞—Å:   **{inter.author.activity}**',
            color=disnake.Colour.from_rgb(238, 130, 238)
    )
    my_infoembed.set_thumbnail(url=inter.author.avatar.url)
    my_infoembed.set_image(url='https://i.artfile.ru/2211x1236_967840_[www.ArtFile.ru].jpg')
    await inter.send(embed=my_infoembed)


@bot.slash_command(name='translator', description='–ü–µ—Ä–µ–≤–æ–¥–∏—Ç –∑–∞–¥–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –ê–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ –†—É—Å—Å–∫–∏–π —è–∑—ã–∫')
async def translate(inter, fromlang, tolang, text):
    translator = Translator(from_lang=fromlang, to_lang=tolang)
    end_text = translator.translate(text=text)
    await inter.send(f'{end_text}')

@bot.slash_command()
async def help(inter):
    usernick = inter.author.name if (inter.author.name) else inter.author.nick
    helpembed = disnake.Embed (
        title = f'**{usernick}**, –≤—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∑–≤–∞–ª–∏ –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º.',
        description = f"{bot_slash_commands} {bot_message_commands}",
        color = disnake.Colour.from_rgb(255, 20, 147)
    )
    await inter.send(embed=helpembed, delete_after=10.0)


@bot.command()
@commands.cooldown(1, 5, commands.BucketType.user)
async def ping(inter):
    for role in inter.author.roles:
        if role.id in admin_perms:
            pingembed = disnake.Embed(
                title=f'üéæ   **Pong!**',
                description=f'–†–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±—ã–ª–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {inter.author.mention}. –ú–æ—è –∑–∞–¥–µ—Ä–∂–∫–∞ —Å–µ–π—á–∞—Å: `{bot.latency}s`.'
            )
            await inter.send(embed=pingembed)
            return
    else:
        msg = (f'**–ü–æ–Ω–≥!**')
        await inter.send(msg)
        return

@bot.slash_command()
async def clear(inter, amount):
    for role in inter.author.roles:
        if role.id in mod_perms:
            nickname = inter.author.name if (inter.author.name) else inter.author.nick

            await inter.channel.purge(limit=int(amount))

            clearembed = disnake.Embed (
                title = f'–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π üóë',
                description = f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {nickname} –æ—á–∏—Å—Ç–∏–ª –≤ —á–∞—Ç–µ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π!',
                color = disnake.Colour.from_rgb(255, 77, 0)
            )
            clearembed.set_footer(text=botversion)
            clearembed.set_thumbnail(url=serverthumbnail)
            
            await inter.send(embed=clearembed, delete_after=5)
            break
    else:
        nickname = inter.author.name if (inter.author.name) else inter.author.nick
        await inter.send(f'–£–≤–∞–∂–∞–µ–º—ã–π **{inter.author.mention}**, —É –≤–∞—Å –ù–ï–¢ –ø—Ä–∞–≤ –Ω–∞ **–¥–∞–Ω–Ω—É—é** –∫–æ–º–∞–Ω–¥—É!')

@bot.command()
async def clear_all(inter, amount=10000):
    for role in inter.author.roles:
        if role.id in high_perms:
            nickname = inter.author.name if (inter.author.name) else inter.author.nick
            await inter.send(f'{inter.author.mention}, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É–¥–∞–ª–µ–Ω–∏–µ –í–°–ï–• —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: `clear`.')
            response = await bot.wait_for('message')
            if response.content.lower() not in 'clear':
                await inter.send('–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è –í–°–ï–• —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ.')
                return
            else:
                await inter.channel.purge(limit=int(amount))

                clearembed = disnake.Embed (
                    title = f'–û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π üóë',
                    description = f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {nickname} –æ—á–∏—Å—Ç–∏–ª –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ!',
                    color = disnake.Colour.from_rgb(255, 77, 0)
                )      
                clearembed.set_footer(text=botversion)
                clearembed.set_thumbnail(url=serverthumbnail)
                await inter.send(embed=clearembed)
                break
    else:
        nickname = inter.author.name if (inter.author.name) else inter.author.nick
        await inter.send(f'–£–≤–∞–∂–∞–µ–º—ã–π **{inter.author.mention}**, —É –≤–∞—Å –ù–ï–¢ –ø—Ä–∞–≤ –Ω–∞ **–¥–∞–Ω–Ω—É—é** –∫–æ–º–∞–Ω–¥—É!')

@bot.event
async def on_message_edit(before, after):
    editlog = bot.get_channel(1000047245170847825)
    editlogEmbed = disnake.Embed(
        title=f'Message updated by {before.author.name}', 
        description=f'{before.author.mention} –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {before.channel.mention}:\n\n–ë—ã–ª–æ: {before.content}\n–°—Ç–∞–ª–æ: {after.content}'
    )
    editlogEmbed.set_footer(text=st)
    for mybot in before.author.name:
        if before.author.name != bot_name:
            await editlog.send(embed=editlogEmbed)
            return




@bot.event
async def on_message_delete(message):
    deletelog = bot.get_channel(1000047261595738243)
    deletelogEmbed = disnake.Embed(
        title = f'Message deleted by {message.author.name}',
        description = f'{message.author.name} —É–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ `{message.content}` –∏–∑ –∫–∞–Ω–∞–ª–∞: {message.channel.mention}.'
    )
    deletelogEmbed.set_footer(text=st)
    for mybot in message.author.name:
        if message.author.name != bot_name:
            await deletelog.send(embed=deletelogEmbed)
            with sqlite3.connect('glory.db') as db:
                c = db.cursor()
                removeone = c.execute(f"UPDATE members SET messages = messages - 1 WHERE id = '{message.author.id}'")
                db.commit()
            db.close()
            return


@bot.slash_command()
async def kick(inter, user: disnake.Member, reason = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
    for role in inter.author.roles:
        if role.id in mod_perms:
            if user.top_role >= inter.author.top_role:
                await inter.send(f'{inter.author.mention} –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å —Ä–æ–ª—å –≤—ã—à–µ –≤–∞—à–µ–π!')
                return
            for role in inter.author.roles:
                if role.id in mod_perms:
                    await user.kick(reason=reason)
                    kickembed = disnake.Embed (
                        title=f'–£—á–∞—Å—Ç–Ω–∏–∫ {user.name} –±—ã–ª –∫–∏–∫–Ω—É–ª —Å —Å–µ—Ä–≤–µ—Ä–∞.',
                        description=f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {inter.author.mention} –∏—Å–∫–ª—é—á–∏–ª —Å —Å–µ—Ä–≤–µ—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ {user.mention} —Å –ø—Ä–∏—á–∏–Ω–æ–π: `{reason}`',
                        color=disnake.Color.from_rgb(255, 222, 173)
                    )
                    kickembed.set_thumbnail(url=user.avatar.url)
                    kickembed.set_image(url='https://avatars.mds.yandex.net/i?id=bad11e4abdd060f9ea66566379ef5bf4-3948822-images-thumbs&n=13')

                    userkickembed = disnake.Embed (
                        title=f'–û—Ç—á–µ—Ç –æ–± –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞ ...',
                        description=f'–í–∞—Å –∏—Å–∫–ª—é—á–∏–ª –º–æ–¥–µ—Ä–∞—Ç–æ—Ä {inter.author.name} —Å ID: {inter.author.id} –ø–æ –ø—Ä–∏—á–∏–Ω–µ {reason}.',
                        color=disnake.Colour.from_rgb(255, 222, 173)
                    )
                    userkickembed.set_thumbnail(url=inter.author.avatar.url)
                    userkickembed.set_image(url='https://avatars.mds.yandex.net/i?id=bad11e4abdd060f9ea66566379ef5bf4-3948822-images-thumbs&n=13')
                    await inter.send(embed=kickembed)
                    await user.send(embed=userkickembed)
                    await user.send('–ù–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ—Å—å, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: https://discord.gg/xtaTvXMJGD')
                    return
    else:
        await inter.send(f'{inter.author.mention}, —É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É.')

@bot.slash_command(description='–ü–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
async def getavatar(inter, user: disnake.Member):
    usernick = user.nick if (user.nick) else user.name
    embed = disnake.Embed (
        title=f'',
        description=f'–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{usernick}**'
    )
    embed.set_image(user.avatar)
    await inter.send(f'{user.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {inter.author.mention} –≤–æ—Ä—É–µ—Ç –≤–∞—à—É –∞–≤–∞—Ç–∞—Ä–∫—É!!!')
    await inter.send(embed=embed)

############### –ù–ê–î–û –î–û–†–ê–ë–û–¢–ê–¢–¨ –î–û–ë–ê–í–õ–ï–ù–ò–ï –°–í–û–ï–ô –ö–ê–†–¢–ò–ù–ö–ò –ò –í–´–ë–û–† –¶–í–ï–¢–ê

@bot.slash_command()
async def news(inter):
    for role in inter.author.roles:
        if role.id in coder:
            authornick = inter.author.nick if (inter.author.nick) else inter.author.name
            channel = bot.get_channel(1003757802017259520)
            helloembed = disnake.Embed (
                title=f'–°–Ω–æ–≤–∞ –¥–µ–ª–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏? –°–æ—Ä–∞ —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç!',
                description=f'–ü—Ä–∏–≤–µ—Ç, {inter.author.mention}!\n\n\
                –í –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π (–°–æ—Ä–æ–π) –∫–∞–∫ –Ω–æ–≤–æ—Å—Ç–Ω—ã–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–æ—Ä–æ–º! –¢–æ–ª—å–∫–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –º–Ω–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª {channel.mention}.\n\n\
                –ù—É —á—Ç–æ-–∂, –¥–∞–≤–∞–π –ø—Ä–∏—Å—Ç—É–ø–∏–º –∫ —Å–æ–∑–¥–∞–Ω–∏—é –Ω–æ–≤–æ—Å—Ç–∏. –ö–æ–≥–¥–∞ –Ω–∏–±—É–¥—å –≤–æ –º–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä—è–º —Ç—É—Ç –∑–∞–¥–∞–≤–∞—Ç—å —Ü–≤–µ—Ç –¥–ª—è –í–µ–±—Ö—É–∫–∞, –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –ø–æ–ª—è, –Ω–æ –ø–æ–∫–∞ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø–∏—Å–∞–Ω–∏–µ.',
                color=disnake.Colour.from_rgb(255, 239, 213)
            )
            helloembed.set_author(name='–ù–æ–≤–æ—Å—Ç–Ω–æ–π –∞–≥–µ–Ω—Ç - –°–æ—Ä–∞')
            helloembed.set_thumbnail(url='https://www.animeclick.it/images/Anime_big/AkiSoraYumenoNaka/AkiSoraYumenoNaka14.jpg')
            await inter.send(embed=helloembed)
            await asyncio.sleep(2)
            await inter.send('–°–º–µ–ª–µ–π! –ù–∞–ø–µ—á–∞—Ç–∞–π —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ–≥–æ: (`cancel`) - –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏.')
            response = await bot.wait_for('message')
            if response.content.lower() == ('cancel'):
                await inter.send('–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.')
                return
            else:
                msgembed = disnake.Embed (
                    title=f'–ù–æ–≤–æ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {st}',
                    description=response.content + '\n---------------------------',
                    color=disnake.Colour.from_rgb(255, 239, 213)
                )
                msgembed.set_author(name=authornick)
                msgembed.set_thumbnail(url=serverthumbnail)
                msgembed.set_footer(text=botversion)
                msgembed.set_image('https://avatars.mds.yandex.net/get-zen_doc/1589334/pub_5d7a19b34e05773c3d0929d0_5d7a19d6118d7f00ae30c29c/scale_1200')
                await inter.send(embed=msgembed)
                await inter.send('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ? [+/-]')
                approve = await bot.wait_for('message')
                if approve.content.lower() not in (['+', '-']):
                    await inter.send('–í–≤–µ–¥–∏—Ç–µ `+` –∏–ª–∏ `-`')
                    againresponse = await bot.wait_for('message', timeout=60)
                if approve.content.lower() == '+':
                    msgembed = disnake.Embed (
                        title=f'–ù–æ–≤–æ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {st}',
                        description=response.content + '\n\n---------------------------',
                        color=disnake.Colour.from_rgb(255, 239, 213)
                    )
                    msgembed.set_author(name=f'–ê–≤—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–∏: {authornick}')
                    msgembed.set_thumbnail(url=serverthumbnail)
                    msgembed.set_footer(text=botversion)
                    msgembed.set_image('https://avatars.mds.yandex.net/get-zen_doc/1589334/pub_5d7a19b34e05773c3d0929d0_5d7a19d6118d7f00ae30c29c/scale_1200')
                    channel = bot.get_channel(1003757802017259520)
                    await channel.send('@everyone —Å–æ–≤–µ—Ç—É—é –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –Ω–æ–≤—ã–º –Ω–æ–≤–æ—Å—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º!', embed=msgembed)
                    return
                if approve.content.lower() == '-':
                    await inter.send('–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.')
                    return


@bot.slash_command(description='–ü–æ—Ü–µ–ª–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
@commands.cooldown(1, 3, commands.BucketType.user)
async def kiss(inter, user: disnake.Member):
    authornick = inter.author.nick if (inter.author.nick) else inter.author.name
    usernick = user.nick if (user.nick) else user.name
    kissembed = disnake.Embed (
        title=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {authornick} –ø–æ—Ü–µ–ª–æ–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {usernick}'
    )
    kissembed.set_image(url='https://lifeo.ru/wp-content/uploads/gif-anime-kisses-35.gif')
    await inter.send(embed=kissembed)

@bot.slash_command(description='–û–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
@commands.cooldown(1, 3, commands.BucketType.user)
async def embrace(inter, user: disnake.Member):
    authornick = inter.author.nick if (inter.author.nick) else inter.author.name
    usernick = user.nick if (user.nick) else user.name
    embraceembed = disnake.Embed (
        title=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {authornick} –æ–±–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {usernick}'
    )
    embraceembed.set_image(url='https://c.tenor.com/OuA7Ogvhb2cAAAAC/hugging-hug.gif')
    await inter.send(embed=embraceembed)

@bot.slash_command(description='–®–ª–µ–ø–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
@commands.cooldown(1, 3, commands.BucketType.user)
async def slap(inter, user: disnake.Member):
    authornick = inter.author.nick if (inter.author.nick) else inter.author.name
    usernick = user.nick if (user.nick) else user.name
    slapembed = disnake.Embed (
        title=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {authornick} —à–ª–µ–ø–Ω—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {usernick}'
    )
    slapembed.set_image(url='https://c.tenor.com/XiYuU9h44-AAAAAC/anime-slap-mad.gif')
    await inter.send(embed=slapembed)

@bot.slash_command(description='–£–¥–∞—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
@commands.cooldown(1, 3, commands.BucketType.user)
async def beat(inter, user: disnake.Member):
    authornick = inter.author.nick if (inter.author.nick) else inter.author.name
    usernick = user.nick if (user.nick) else user.name
    beatembed = disnake.Embed (
        title=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {authornick} —É–¥–∞—Ä–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {usernick}'
    )
    beatembed.set_image(url='https://i.gifer.com/P44M.gif')
    await inter.send(embed=beatembed)

@bot.slash_command(description='–í—ã–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ä–æ–ª—å (admin)')
async def temprole(inter, user: disnake.Member, roleget: disnake.Role, time: int):
    for role in inter.author.roles:
        if role.id in admin_perms:
            if time is None:
                return
            else:
                roleid = roleget.id
                botgetrole = user.guild.get_role(roleid)
                channellog = bot.get_channel(1002870162363535391)
                await inter.send(f'{inter.author.mention} –≤—ã–¥–∞–ª —Ä–æ–ª—å {roleget.mention} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.mention} –Ω–∞ {time} –º–∏–Ω—É—Ç.')
                await user.add_roles(botgetrole)
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    add = c.execute(f"UPDATE members SET temprole = '{roleget.name}', tempRoleTime = '{time}' WHERE id = '{user.id}'")
                    db.commit()
                db.close()
                countertime = time
                while countertime > 0:
                    countertime -= 1
                    await asyncio.sleep(60)
                    if countertime == 0:
                        await user.remove_roles(botgetrole)
                        await inter.send(f'{user.mention}, –≤–∞—à–∞ —Ä–æ–ª—å **{roleget.mention}** –±—ã–ª–∞ —Å–Ω—è—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.')
                        with sqlite3.connect('glory.db') as db:
                            c = db.cursor()
                            insert = c.execute(f"UPDATE members SET temprole = 'None', tempRoleTime = '0' WHERE id = '{user.id}'")
                            db.commit()
                        db.close()
                        return

@bot.command()
async def hello_for(inter, user: disnake.Member):
    for role in inter.author.roles:
        if role.id in mod_perms:
            await inter.send(f'{user.mention}, –¥–µ—Ä–∂–∏ –º–æ–π —Ç–µ–ø–ª—ã–π, –ø–ª–∞–º–µ–Ω–Ω—ã–π –ø—Ä–∏–≤–µ—Ç! üî•üíñ')
            break
    else:
        await inter.send(f'{inter.author.mention} —É –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É –ø—Ä–∏–≤–µ—Ç–∞ –æ—Ç –º–æ–µ–≥–æ –∏–º–µ–Ω–∏!')

######################################################################## NEW TRY TICKET SISTEM

# @bot.slash_command(description='–°–æ–∑–¥–∞–µ—Ç —Ç–∏–∫–µ—Ç. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /s_report')
# async def new(inter, msg):
#     if msg is None:
#         await inter.send('–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–∏–∫–µ—Ç–∞.')
#         return
#     else:
#         guild = bot.get_guild(1000009791961309194)
#         categorychannelticket = disnake.utils.get(inter.guild.categories, name="–∞–∫—Ç–∏–≤–Ω—ã–µ –∂–∞–ª–æ–±—ã")
#         supportrole = inter.guild.get_role(1002486676913922058)
#         authorrole = inter.author
#         everyone = inter.guild.get_role(1000009791961309194)
#         overwrites_for_ticket = {
#             everyone:disnake.PermissionOverwrite(read_messages=False),
#             inter.author:disnake.PermissionOverwrite(read_messages=True, send_messages=True),
#             supportrole:disnake.PermissionOverwrite(read_messages=True, send_messages=True)
#         }
#         newticket = await categorychannelticket.create_text_channel(name=f'{inter.author.name} ticket.', overwrites=overwrites_for_ticket)
#         await inter.send(f'{inter.author.mention} –≤–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –º–æ–¥–µ—Ä–∞—Ü–∏–∏. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –≤ {newticket}')
#         return

######################################################################### TICKETS TICKETS TICKETS TICKETS TICKETS TICKETS TICKETS TICKETS
class Ticket(commands.Cog):

    @bot.command()
    async def tickets(inter):
        ticketchannelid = bot.get_channel(1003908689549336667)
        await ticketchannelid.purge(limit=99999999)
        guild = 1000009791961309194
        button = disnake.ui.View()
        button.add_item(disnake.ui.Button(style=disnake.ButtonStyle.green, emoji = 'üìî'))
        embed = disnake.Embed (
            title='–ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º - –°–æ—Ä–∞!',
            description="""–ù–∏—Ö–∞–æ, —É–≤–∞–∂–∞–µ–º—ã–π —É—á–∞—Å—Ç–Ω–∏–∫!
            
            –ù—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∑–∞ `–ø–æ–º–æ—â—å—é`? –•–æ—á–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –∫–æ–≥–æ-—Ç–æ `–∂–∞–ª–æ–±—É` –∏ –∏–º–µ–µ—à—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞? –¢–æ–≥–¥–∞ —Ç—ã –æ–±—Ä–∞—Ç–∏–ª—Å—è —Ç–æ—á–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É!
            –í –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ —Ç—ã –±–µ–∑ –ø—Ä–æ–±–ª–µ–º –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å `"—Ç–∏–∫–µ—Ç"` –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.
            
            –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –Ω–∞–∂–º–∏ –Ω–∞ –∑–µ–ª–µ–Ω—É—é –∫–Ω–æ–ø–æ—á–∫—É —Å–Ω–∏–∑—É, –ø–æ—Å–ª–µ —á–µ–≥–æ —Å—é–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –∫–∞–Ω–∞–ª–∞ –≤–∞—à–µ–≥–æ —Ç–∏–∫–µ—Ç–∞, –∞ –≤ –Ω–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ —É–∂–µ –±—É–¥—É—Ç –ø—Ä–∏–≤–ª–µ—á–µ–Ω—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã!""",
            color=disnake.Colour.from_rgb(220, 20, 60)
        )
        embed.set_thumbnail(url=serverthumbnail)
        embed.set_footer(text=botversion)
        embed.set_image(url='https://c4.wallpaperflare.com/wallpaper/295/163/719/anime-anime-boys-picture-in-picture-kimetsu-no-yaiba-kamado-tanjir%C5%8D-hd-wallpaper-preview.jpg')
        await ticketchannelid.send(embed=embed, view=button)

    @bot.event
    async def on_message_interaction(inter):
        ticketchannelid = bot.get_channel(1003908689549336667)
        category = disnake.utils.get(inter.guild.categories, name="–∞–∫—Ç–∏–≤–Ω—ã–µ –∂–∞–ª–æ–±—ã")
        support = inter.guild.get_role(1002486676913922058)
        everyone = inter.guild.get_role(1000009791961309194)
        overwrites = { 
            everyone:disnake.PermissionOverwrite(read_messages=False),
            inter.me:disnake.PermissionOverwrite(read_messages=True),
            inter.author:disnake.PermissionOverwrite(read_messages=True),
            support:disnake.PermissionOverwrite(read_messages=True, send_messages=True)
            }
        newticket = await category.create_text_channel(name=f'{inter.author.name} ticket.', overwrites=overwrites)
        embed = disnake.Embed (
            title='–°–ø–∞—Å–∏–±–æ —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å!',
            description=f'–£–≤–∞–∂–∞–µ–º—ã–π {inter.author.mention}, –≤—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–ª–∏ –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ {newticket.mention} —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ—à–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.',
            color=disnake.Colour.from_rgb(220, 20, 60)
        )
        embed.set_thumbnail(url=serverthumbnail)
        embed.set_footer(text=botversion)
        await inter.send(inter.author.mention, embed=embed, delete_after=10)
        newticketembed = disnake.Embed (
            title='–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —É–∂–µ —Å–ø–µ—à–∞—Ç –Ω–∞ –ø–æ–º–æ—â—å, –∞ –ø–æ–∫–∞...',
            description="""... –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –∏–∑–ª–æ–∂–∏—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–µ—Ç–∫–æ, –µ—Å–ª–∏ —ç—Ç–æ –∂–∞–ª–æ–±–∞ —Ç–æ —Å—Ä–∞–∑—É –ø—Ä–∏–∫—Ä–µ–ø–ª—è–π—Ç–µ –ø—Ä–∏—á–∏–Ω—É –ø–æ –∫–æ—Ç–æ—Ä–æ–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞–∫–∞–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞ —Ç–∞–∫-–∂–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.
            
            –ü—Ä–∏–º–µ—Ä –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è:
            `–í—ã —Ç—É—Ç?`
            `–ö–æ–≥–¥–∞ –æ—Ç–≤–µ—Ç–∏—Ç–µ?`
            
            –ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è:

            –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **user** –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–æ ..., –ø—Ä–∏–∫—Ä–µ–ø–ª—è—é –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞: **—Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞**""",
            color=disnake.Colour.from_rgb(220, 20, 60)
        )
        newticketembed.set_thumbnail(url=inter.author.avatar.url)
        newticketembed.set_footer(text=botversion)
        await newticket.send(f'–í–æ–ø—Ä–æ—Å –¥–ª—è {support.mention}', embed=newticketembed)
        return



    @bot.command()
    async def close(inter: disnake.Interaction, closereason):
        category = disnake.utils.get(inter.guild.categories, name="–∞–∫—Ç–∏–≤–Ω—ã–µ –∂–∞–ª–æ–±—ã")
        categoryclosed = disnake.utils.get(inter.guild.categories, name="–∫–æ—Ä–∑–∏–Ω–∞")
        for role in inter.author.roles:
            if role.id in high_perms:
                channel = inter.channel
                await inter.send(f'–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {inter.author.mention} –∑–∞–∫—Ä—ã–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å –ø—Ä–∏—á–∏–Ω–æ–π `{closereason}`')
                await channel.edit(name=f'{channel} closed', sync_permissions=True)
                await asyncio.sleep(15)
                await channel.edit(category=categoryclosed)
                return

userwhoinvite = []
useranswer = []        

class Families:

    @bot.slash_command()
    async def create_family(inter, familyname, colour, leader: disnake.Member):
        for role in inter.author.roles:
            if role.id in high_perms:
                guild = inter.guild
                familyid = uuid.uuid4()
                def str_to_hex(myStr):
                    base16INT = int(myStr, 16)
                    hex_value = hex(base16INT)
                    return int(hex_value,0)
                availableColour = str_to_hex(colour)
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    checkname = c.execute(f"SELECT family_name FROM families WHERE family_name = '{familyname}'").fetchone()
                    db.commit()
                    if checkname:
                        await inter.send('—Ñ–∞–º–∞ —É–∂–µ –µ—Å—Ç—å')
                        return
                    else:
                        familyrole = await guild.create_role(name=familyname, colour=disnake.Colour(availableColour))
                        c.execute(f"INSERT INTO families VALUES ('{leader.name}', '{leader.id}', '{familyname}', '{familyrole.id}', '{familyid}', '1')")
                        c.execute(f"UPDATE members SET is_family_leader = '1', family_lead_id = '{familyrole.id}', family_moderator = '1' WHERE id = '{leader.id}'")
                        db.commit()
                        await leader.add_roles(familyrole)
                db.close()
                createfamilyembed = disnake.Embed(
                    title = '–ù–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–æ–≤–∞—è —Å–µ–º—å—è!',
                    description=f'–ß–ª–µ–Ω –æ—Ä–≥–∞–Ω–æ–≤ –æ–ø–µ–∫–∏ {inter.author.mention} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–æ–≤—É—é —Å–µ–º—å—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∏–ª–∞:\n\n\
                    –ù–∞–∑–≤–∞–Ω–∏–µ: `{familyname}`\n\
                    –ì–ª–∞–≤—É: {leader.mention}\n\
                    –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID: `{familyid}`\n\
                    –†–æ–ª—å: {familyrole.mention}\n\n\
                    –ü–æ–∂–µ–ª–∞–µ–º —É–¥–∞—á–∏ –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ —Å–µ–º—å–∏!',
                    color=disnake.Colour.from_rgb(255, 218, 185)
                )
                createfamilyembed.set_thumbnail(url=serverthumbnail)
                createfamilyembed.set_image(url='https://picfiles.alphacoders.com/260/260049.png')
                createfamilyembed.set_footer(text=botversion)
                await inter.send(embed=createfamilyembed)
                return


                       
  
    @bot.slash_command(description='–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –≤ —Å–µ–º—å—é')
    async def family_add_moderator(inter, user: disnake.User):
        with sqlite3.connect('glory.db') as db:
            c = db.cursor()
            checkforleader = c.execute(f"SELECT family_leader FROM families WHERE family_leader = '{inter.author.id}'").fetchone()
            getrolefromfamilies = c.execute(f"SELECT family_role FROM families WHERE family_leader = '{inter.author.id}'").fetchone()
            getfamilyname = c.execute(f"SELECT family_name FROM families WHERE family_leader = '{inter.author.id}'").fetchone()
            db.commit()
            getfamilystr = getfamilyname[0]
            getrolefromfamiliesstr = getrolefromfamilies[0]
            getinfo = c.execute(f"SELECT moderator_id FROM family_moderators WHERE family_role = '{getrolefromfamiliesstr}'").fetchone()
            if inter.author.id in checkforleader:
                if getinfo:
                    c.execute(f"INSERT INTO family_moderators VALUES ('{getfamilystr}', '{getrolefromfamiliesstr}', '{user.id}')")
                    await inter.send(f'{user.mention}, –≤—ã –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ –ø–æ—Å—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å–µ–º—å–∏ `{getfamilystr}` –ª–∏–¥–µ—Ä–æ–º {inter.author.mention}')
                    return
                else:
                    await inter.send(f'{inter.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –≤–∞—à–µ–π —Å–µ–º—å–∏!')
                    return 

    @bot.slash_command(description='–°–Ω—è—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞')
    async def family_remove_moderator(inter, user: disnake.User):
        with sqlite3.connect('glory.db') as db:
            c = db.cursor()
            getlead = c.execute(f"SELECT family_leader FROM families WHERE family_leader = '{inter.author.id}'").fetchone()
            getname = c.execute(f"SELECT family_name FROM families WHERE family_leader = '{inter.author.id}'").fetchone()
            db.commit()
            family_name_str = getname[0]
            getrole = c.execute(f"SELECT family_role FROM family_moderators WHERE family_name = '{family_name_str}'").fetchone()
            getmoder = c.execute(f"SELECT moderator_id FROM family_moderators WHERE family_name = '{family_name_str}'").fetchone()
            db.commit()
            getmoderstr = getmoder[0]
            if inter.author.id in getlead:
                if getmoder:
                    c.execute(f"DELETE FROM family_moderators WHERE moderator_id = '{getmoderstr}'")
                    await inter.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –±—ã–ª —Å–Ω—è—Ç —Å –ø–æ—Å—Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å–µ–º—å–∏ `{family_name_str}` –ª–∏–¥–µ—Ä–æ–º {inter.author.mention}')
                    return
                else:
                    await inter.send(f'{inter.author.mention}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –≤–∞—à–µ–π —Å–µ–º—å–∏.')
                    return

    @bot.slash_command()
    async def delete_family(inter, family_role: disnake.Role, reason):
        for role in inter.author.roles:
            if role.id in high_perms:
                await family_role.delete(reason=f'–£–¥–∞–ª–µ–Ω–∏–µ —Å–µ–º—å–∏ –æ—Ç {inter.author.mention}')
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    # GET FAMILY INFO : : : :

                    familyleader_name_f = c.execute(f"SELECT familyleader_name FROM families WHERE family_role = '{family_role.id}'").fetchone()
                    family_leader_f = c.execute(f"SELECT family_leader FROM families WHERE family_role = '{family_role.id}'").fetchone()
                    family_id_f = c.execute(f"SELECT family_id FROM families WHERE family_role = '{family_role.id}'").fetchone()
                    family_counter_f = c.execute(f"SELECT family_counter FROM families WHERE family_role = '{family_role.id}'").fetchone()

                    # STOP GETTING INFO

                    getleaderid = c.execute(f"SELECT family_leader FROM families WHERE family_role = '{family_role.id}'").fetchone()
                    db.commit()
                    c.execute(f"DELETE FROM families WHERE family_role = '{family_role.id}'")
                    c.execute(f"DELETE FROM family_moderators WHERE family_role = '{family_role.id}'")
                    c.execute(f"UPDATE members SET is_family_leader = '0', family_lead_id = '0' WHERE id = '{getleaderid[0]}'")
                    c.execute(f"UPDATE members SET family_moderator = '0' WHERE id = '{getleaderid[0]}'")
                    db.commit()
                db.close()

                # GETING ALL STRINGS : : : : 

                familyleader_name = familyleader_name_f[0]
                family_leader = family_leader_f[0]
                family_id = family_id_f[0]
                family_counter = family_counter_f[0]

                # STOP GETTING STRINGS

                familydeleteembed = disnake.Embed (
                    title='–£–¥–∞–ª–µ–Ω–∏–µ —Å–µ–º—å–∏ —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.',
                    description=f'–ß–ª–µ–Ω –æ—Ä–≥–∞–Ω–æ–≤ –æ–ø–µ–∫–∏ {inter.author.mention} —É–¥–∞–ª–∏–ª —Å–µ–º—å—é `{family_role.name}` —Å –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ `{reason}`\n\n\
                    –°–µ–º—å—è –∏–º–µ–ª–∞:\n\
                    –ì–ª–∞–≤—É: `{familyleader_name}`\n\
                    –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID: `{family_id}`\n\
                    –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: `{family_counter}`',
                    color=disnake.Colour.from_rgb(255, 218, 185)
                )
                familydeleteembed.set_thumbnail(url=serverthumbnail)
                familydeleteembed.set_footer(text=botversion)
                familydeleteembed.set_image(url='https://i.pinimg.com/originals/ab/45/e1/ab45e140a6917255d7c7840cc77ee52c.jpg')
                await inter.send(embed=familydeleteembed)
                return
    


###### –ó–î–ï–°–¨ –ù–£–ñ–ù–û –°–î–ï–õ–ê–¢–¨ –í–´–ë–û–† –°–ï–ú–¨–ò –ï–°–õ–ò –ú–û–î–ï–† –ë–û–õ–¨–®–ï –ß–ï–ú –í 1 –°–ï–ú–¨–ï
    @bot.command()
    async def family_invite(inter, user: disnake.Member):
        with sqlite3.connect('glory.db') as db:
            c = db.cursor()
            check = c.execute(f"SELECT family_leader FROM families WHERE family_leader = '{inter.author.id}'").fetchone()
            db.commit()
            if check is None:
                await inter.send(f'{inter.author.mention}, –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–∫–æ–π –ª–∏–±–æ —Å–µ–º—å–∏!')
                return
            else:
                familyrolemention = c.execute(f"SELECT family_role FROM families WHERE family_leader = '{inter.author.id}'").fetchone()
                familyrolelist = familyrolemention[0]
                global familyroleformention
                familyroleformention = inter.guild.get_role(familyrolelist)
                await inter.send(f'{user.mention}, –≤—ã –±—ã–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω—ã –≤ —Å–µ–º—å—é {familyroleformention.mention} –ª–∏–¥–µ—Ä–æ–º {inter.author.mention}\n\
                –í —Ç–µ—á–µ–Ω–∏–∏ 10 —Å–µ–∫—É–Ω–¥ –æ—Ç–≤–µ—Ç—å—Ç–µ `sora.accept` —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ: `sora.decline`.')
                userinvited = user.id
                userwhoinvite.append(userinvited)
                await asyncio.sleep(10)
                await inter.send(f'{user.mention}, –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è –≤—ã—à–ª–æ. –ï—Å–ª–∏ –≤—ã –Ω–µ —É—Å–ø–µ–ª–∏ –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –µ–≥–æ –µ—â–µ —Ä–∞–∑.')
                userwhoinvite.remove(userinvited)


    @bot.command()
    async def accept(inter):
        for user in userwhoinvite:
            if inter.author.id in userwhoinvite:
                await inter.author.add_roles(familyroleformention)
                userwhoinvite.remove(inter.author.id)
                await inter.send(f'{inter.author.mention}, –≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —Å–µ–º—å–µ {familyroleformention.mention}')
                return

    @bot.command()
    async def decline(inter):
        for user in userwhoinvite:
            if inter.author.id in userwhoinvite:
                userwhoinvite.remove(inter.author.id)
                await inter.send(f'{inter.author.mention}, –≤—ã –æ–∫—Ç–∞–∑–∞–ª–∏—Å—å –æ—Ç –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ —Å–µ–º—å—é {familyroleformention.mention}')
                return

    @bot.slash_command(description='–í—ã–≥–Ω–∞—Ç—å –∏–∑ —Å–µ–º—å–∏')
    async def family_kick(inter, user: disnake.Member):
        with sqlite3.connect('glory.db') as db:
            c = db.cursor()
            checkleader = c.execute(f"SELECT family_lead_id FROM members WHERE id = '{inter.author.id}'").fetchone()
            checkmoder = c.execute(f"SELECT family_moderator FROM members WHERE id = '{inter.author.id}'").fetchone()
            if checkleader or checkmoder != '0':
                getrolebyleader = c.execute(f"SELECT family_role WHERE ")
                familyrole = c.execute(f"SELECT family_role FROM families WHERE family_moderator = '1'").fetchone() 
                db.commit()
                familyroleformention = familyrole[0]
                roleforremove = inter.guild.get_role(familyroleformention)
                await inter.send(f'{user.mention} –≤—ã –±—ã–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ —Å–µ–º—å–∏ {roleforremove.mention} –ª–∏–¥–µ—Ä–æ–º/–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º {inter.author.mention}')
                await user.remove_roles(roleforremove)
                return
            else:
                await inter.send(f'{inter.author.mention} –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ª–∏–¥–µ—Ä–æ–º/–∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –∫–∞–∫–æ–π –ª–∏–±–æ —Å–µ–º—å–∏.')
        db.close()
        return


    @bot.command()
    async def droptable1(inter):
        for role in inter.author.roles:
            if role.id in dev_perms:
                await inter.send('done')
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    c.execute("DELETE FROM families")
                    db.commit()
                db.close()
                return

    @bot.command()
    async def droptable2(inter):
        for role in inter.author.roles:
            if role.id in dev_perms:
                await inter.send('done')
                with sqlite3.connect('glory.db') as db:
                    c = db.cursor()
                    c.execute("DELETE FROM family_moderators")
                    db.commit()
                db.close()
                return

bot.run(bot_settings['TOKEN'])
